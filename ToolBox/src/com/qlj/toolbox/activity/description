/**
	 * callback回调实例
	 * 
	 */
	private void getChats(final String menuKey, final String eventType, final String chatContent) {
		new Thread() {
			public void run() {
				try {
					ChatApi.getChats(CommonUtil.getUserId(), "", menuKey, eventType, chatContent, new IResponseListener() {

						@Override
						public void doComplete(Object data, int code, String msg) {
							Message message = new Message();
							message.what = 3;
							message.obj = data;
							// handler.sendMessage(message);
						}

						@Override
						public void doFail(int code, String msg) {
							Message message = new Message();
							message.what = code;
							message.obj = msg;
							// handler.sendMessage(message);
						}
					});
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}.start();
	}

// 分页展示
	private void updateUI(Object obj) {
		if (currPage == 1) {

			// 更新数据
			listMerchantData.clear();
			if (obj != null) {
				listMerchantData = (ArrayList<Merchant>) obj;
			}

			if (listMerchantData != null && listMerchantData.size() > 0) {
				if (listMerchantData.size() == pageSize) {
					listView.setPullLoadEnable(true);
				} else {
					listView.setPullLoadEnable(false);
				}
				adapter.notifyDataSetChanged();
				listView.setVisibility(View.VISIBLE);
				tv_empty.setVisibility(View.GONE);
			} else {
				// listView.setEmptyView(tv_empty);
				listView.setVisibility(View.GONE);
				tv_empty.setVisibility(View.VISIBLE);
			}
		} else {
			if (obj != null && ((ArrayList<Merchant>) obj).size() > 0) {
				if (((ArrayList<Merchant>) obj).size() == pageSize) {
					listView.setPullLoadEnable(true);
				} else {
					listView.setPullLoadEnable(false);
				}
				listMerchantData.addAll((ArrayList<Merchant>) obj);
				adapter.notifyDataSetChanged();
			} else {
				listView.setPullLoadEnable(false);
			}
		}
	}